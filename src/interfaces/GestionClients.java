/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import classes.Client;
import classes.Connexion;
import com.sun.xml.internal.bind.v2.schemagen.Util;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.*;

/**
 *
 * @author SystellCOM
 */
public class GestionClients extends javax.swing.JFrame {

    Statement stm;
    Connexion maconnexion = new Connexion();

    /**
     * Creates new form GestionClients
     */
    public GestionClients() {
        initComponents();
        afficherClient();

        //DefaultTableModel model = new DefaultTableModel();
    }

    //Afficher les données de la table
    public ArrayList<Client> liste_client() {
        ArrayList<Client> liste_client = new ArrayList<>();
        String requeteSelect = "SELECT * FROM client order by id";
        ResultSet rs;
        try {
            stm = maconnexion.ObtenirConnexion().createStatement();
            rs = stm.executeQuery(requeteSelect);
            Client client;
            while (rs.next()) {
                client = new Client(rs.getInt("id"), rs.getString("nom"), rs.getString("prenom"), rs.getString("adresse"), rs.getString("email"), rs.getString("telephone"), rs.getString("ville"), rs.getString("fonction"));
                liste_client.add(client);
            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
        return liste_client;
    }

    //Afficher les données à l'ajout
    public void afficherClient() {
        ArrayList<Client> liste = liste_client();
        DefaultTableModel model = (DefaultTableModel) table_clients.getModel();
        model.setRowCount(0);
        Object[] row = new Object[8];
        for (int i = 0; i < liste.size(); i++) {
            row[0] = liste.get(i).getId();
            row[1] = liste.get(i).getNom();
            row[2] = liste.get(i).getPrenom();
            row[3] = liste.get(i).getAdresse();
            row[4] = liste.get(i).getEmail();
            row[5] = liste.get(i).getTelephone();
            row[6] = liste.get(i).getVille();
            row[7] = liste.get(i).getFonction();
            model.addRow(row);
        }

    }

    //Vider les champs
    public void viderChamps() {
        txt_nom.setText("");
        txt_prenom.setText("");
        txt_adresse.setText("");
        txt_email.setText("");
        txt_telephone.setText("");
        cb_ville.setSelectedItem("Brazzaville");
        txt_fonction.setText("");
    }

    //Afficher les valeurs du tableau dans les champs
    public void fichierVersEcran() {
        //Afficher les informations sur le champ
        //Faire référence à la ligne selectionnée
        int index = table_clients.getSelectedRow();
        //Définir les valeurs du tableau comme valeurs des champs de saisie
        txt_nom.setText(liste_client().get(index).getNom());
        txt_prenom.setText(liste_client().get(index).getPrenom());
        txt_adresse.setText(liste_client().get(index).getAdresse());
        txt_email.setText(liste_client().get(index).getEmail());
        txt_telephone.setText(liste_client().get(index).getTelephone());
        cb_ville.setSelectedItem(liste_client().get(index).getVille());
        txt_fonction.setText(liste_client().get(index).getFonction());
    }

    //Fonction permettant de rechercher
    public void rechercher(String str) {
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) table_clients.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        table_clients.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_nom = new javax.swing.JTextField();
        txt_adresse = new javax.swing.JTextField();
        txt_email = new javax.swing.JTextField();
        txt_prenom = new javax.swing.JTextField();
        txt_telephone = new javax.swing.JTextField();
        txt_fonction = new javax.swing.JTextField();
        cb_ville = new javax.swing.JComboBox<>();
        btn_rechercher = new javax.swing.JButton();
        btn_ajouter = new javax.swing.JButton();
        btn_modifier = new javax.swing.JButton();
        btn_supprimer = new javax.swing.JButton();
        btn_afficher = new javax.swing.JButton();
        btn_annuler = new javax.swing.JButton();
        btn_retour_dashboard = new javax.swing.JButton();
        txt_rechercher = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_clients = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Open Sans Light", 1, 18)); // NOI18N
        jLabel1.setText("ENREGISTREMENT DES CLIENTS");

        jLabel2.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        jLabel2.setText("NOM : ");

        jLabel3.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        jLabel3.setText("PRENOM : ");

        jLabel4.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        jLabel4.setText("ADRESSE : ");

        jLabel5.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        jLabel5.setText("EMAIL : ");

        jLabel6.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        jLabel6.setText("TELEPHONE : ");

        jLabel7.setFont(new java.awt.Font("Open Sans Light", 1, 14)); // NOI18N
        jLabel7.setText("VILLE : ");

        jLabel8.setText("FONCTION : ");

        cb_ville.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brazzaville", "Pointe-Noire", "Bouenza", "Cuvette", "Cuvette-Ouest", "Lékoumou", "Likouala", "Niari", "Plateaux", "Pool", "Sangha", "Kouilou" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_adresse, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(txt_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_fonction)
                            .addComponent(cb_ville, 0, 172, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_adresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cb_ville, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_fonction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btn_rechercher.setText("Recherche");
        btn_rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rechercherActionPerformed(evt);
            }
        });

        btn_ajouter.setText("Ajouter");
        btn_ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ajouterActionPerformed(evt);
            }
        });

        btn_modifier.setText("Modifier");
        btn_modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifierActionPerformed(evt);
            }
        });

        btn_supprimer.setText("Supprimer");
        btn_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_supprimerActionPerformed(evt);
            }
        });

        btn_afficher.setText("Afficher");
        btn_afficher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_afficherActionPerformed(evt);
            }
        });

        btn_annuler.setText("Annuler");
        btn_annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_annulerActionPerformed(evt);
            }
        });

        btn_retour_dashboard.setText("Retour");
        btn_retour_dashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_retour_dashboardActionPerformed(evt);
            }
        });

        txt_rechercher.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_rechercherKeyReleased(evt);
            }
        });

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        table_clients.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        table_clients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOM", "PRENOM", "ADRESSE", "EMAIL", "TELEPHONE", "VILLE", "FONCTION"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_clients.setRowHeight(20);
        jScrollPane1.setViewportView(table_clients);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btn_rechercher)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btn_ajouter)
                                            .addComponent(btn_afficher))
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btn_annuler, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                            .addComponent(btn_modifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(btn_supprimer))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addComponent(btn_retour_dashboard))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(jLabel1)))
                        .addGap(0, 238, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_rechercher)
                            .addComponent(txt_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_ajouter)
                            .addComponent(btn_modifier)
                            .addComponent(btn_supprimer))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_afficher)
                            .addComponent(btn_annuler)
                            .addComponent(btn_retour_dashboard))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ajouterActionPerformed
        // TODO add your handling code here:
        String nom = txt_nom.getText(), prenom = txt_prenom.getText(),
                adresse = txt_adresse.getText(), email = txt_email.getText(),
                telephone = txt_telephone.getText(), fonction = txt_fonction.getText();
        String ville = (String) cb_ville.getSelectedItem();

        String requete_ajout = "INSERT INTO client (nom, prenom, adresse, email, telephone, ville, fonction)"
                + "VALUES('" + nom + "','" + prenom + "','" + adresse + "','" + email + "','" + telephone + "','" + ville + "','" + fonction + "')";

        try {
            if (nom.equals("")
                    || prenom.equals("")
                    || adresse.equals("")
                    || email.equals("")
                    || telephone.equals("")
                    || fonction.equals("")) {
                JOptionPane.showMessageDialog(null, "Veuillez entrer tous les champs s'il vous plaît");
            } else {
                stm = maconnexion.ObtenirConnexion().createStatement();
                stm.executeUpdate(requete_ajout);
                afficherClient();
                JOptionPane.showMessageDialog(null, "Client ajouté avec succès");
                txt_nom.setText("");
                txt_prenom.setText("");
                txt_adresse.setText("");
                txt_email.setText("");
                txt_telephone.setText("");
                txt_fonction.setText("");
                cb_ville.setSelectedItem("Brazzaville");
            }

        } catch (SQLException ex) {
            System.err.println(ex);
        }

    }//GEN-LAST:event_btn_ajouterActionPerformed

    private void btn_retour_dashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_retour_dashboardActionPerformed
        new GestionTableauxBord().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_retour_dashboardActionPerformed

    private void btn_supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_supprimerActionPerformed
        // TODO add your handling code here:
        int index = table_clients.getSelectedRow();
        try {
            if (JOptionPane.showConfirmDialog(null, "attention vous avez supprimer un client etes-vous sûr?", "Suppimer client",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                if (true) {

                    stm.executeUpdate("DELETE from client where id= '" + liste_client().get(index).getId() + "'   ");
                    afficherClient();
                    viderChamps();
                    JOptionPane.showMessageDialog(null, "Client suppimé");
                    // afficherClient();
                } else {
                    JOptionPane.showMessageDialog(null, "veuillez remplir le champs id");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "erreur de supprimer /n" + e.getMessage());
            System.err.println(e);
        }
    }//GEN-LAST:event_btn_supprimerActionPerformed

    private void btn_afficherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_afficherActionPerformed
        fichierVersEcran();
        if (!txt_nom.getText().equals("")
                || !txt_prenom.getText().equals("")
                || !txt_adresse.getText().equals("")
                || !txt_email.getText().equals("")
                || !txt_telephone.getText().equals("")
                || !txt_fonction.getText().equals("")) {
            btn_ajouter.setEnabled(false);
        }
        


    }//GEN-LAST:event_btn_afficherActionPerformed

    private void btn_annulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_annulerActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Voulez-vous annuler et vider les champs?", "Annuler et vider les champs",
                JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
            if (true) {
                viderChamps();
                btn_ajouter.setEnabled(true);
            }

        }
    }//GEN-LAST:event_btn_annulerActionPerformed

    private void btn_modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifierActionPerformed
        // TODO add your handling code here:
        //Modifier les informations afficher

        int index = table_clients.getSelectedRow();
        try {
            if (txt_nom.getText().equals("")
                    || txt_prenom.getText().equals("")
                    || txt_adresse.getText().equals("")
                    || txt_email.getText().equals("")
                    || txt_telephone.getText().equals("")
                    || txt_fonction.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Aucun client n'a été affiché pour procéder à la modifiaction");
            } else {
                btn_ajouter.setEnabled(false);
                if (JOptionPane.showConfirmDialog(null, "Confirmer la modification", "Modification",
                        JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                    stm.executeUpdate("UPDATE client SET nom='" + txt_nom.getText() + "',prenom='" + txt_prenom.getText()
                            + "',adresse='" + txt_adresse.getText() + "',email='"
                            + txt_email.getText() + "',telephone='" + txt_telephone.getText()
                            + "',ville='" + cb_ville.getSelectedItem() + "',fonction='" + txt_fonction.getText()
                            + "'where id= '" + liste_client().get(index).getId() + "'   ");
                    afficherClient();
                    viderChamps();
                    btn_ajouter.setEnabled(true);
                    JOptionPane.showMessageDialog(null, "Modification effectuée avec succès");
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "erreur de modification!!!!!");
            System.err.println(e);
        }
    }//GEN-LAST:event_btn_modifierActionPerformed

    private void btn_rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rechercherActionPerformed
        // TODO add your handling code here:
        //Rechercher par nom
        String zone_recherche = txt_rechercher.getText();
        rechercher(zone_recherche);

        /*
        for (int i = 0; i < table_clients.getRowCount(); i++) {
            if(table_clients.getValueAt(i, 0).equals(zone_recherche)) {
                table_clients.setRowSelectionInterval(i, i);
            }else if (table_clients.getValueAt(i, 1).equals(zone_recherche)) {
                table_clients.setRowSelectionInterval(i, i);
            }else if(table_clients.getValueAt(i, 2).equals(zone_recherche)) {
                table_clients.setRowSelectionInterval(i, i);
            } else if(table_clients.getValueAt(i, 3).equals(zone_recherche)) {
                table_clients.setRowSelectionInterval(i, i);
            } else if (table_clients.getValueAt(i, 4).equals(zone_recherche)) {
                table_clients.setRowSelectionInterval(i, i);
            } else if (table_clients.getValueAt(i, 5).equals(zone_recherche)) {
                table_clients.setRowSelectionInterval(i, i);
            }else if(table_clients.getValueAt(i, 6).equals(zone_recherche)) {
                table_clients.setRowSelectionInterval(i, i);
            }else if(table_clients.getValueAt(i, 7).equals(zone_recherche)) {
                table_clients.setRowSelectionInterval(i, i);
            }
        }
         */
    }//GEN-LAST:event_btn_rechercherActionPerformed

    private void txt_rechercherKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rechercherKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_rechercherKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionClients.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionClients.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionClients.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionClients.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionClients().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_afficher;
    private javax.swing.JButton btn_ajouter;
    private javax.swing.JButton btn_annuler;
    private javax.swing.JButton btn_modifier;
    private javax.swing.JButton btn_rechercher;
    private javax.swing.JButton btn_retour_dashboard;
    private javax.swing.JButton btn_supprimer;
    private javax.swing.JComboBox<String> cb_ville;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_clients;
    private javax.swing.JTextField txt_adresse;
    private javax.swing.JTextField txt_email;
    private javax.swing.JTextField txt_fonction;
    private javax.swing.JTextField txt_nom;
    private javax.swing.JTextField txt_prenom;
    private javax.swing.JTextField txt_rechercher;
    private javax.swing.JTextField txt_telephone;
    // End of variables declaration//GEN-END:variables
}
